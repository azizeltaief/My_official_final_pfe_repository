{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\azize\\\\OneDrive\\\\Bureau\\\\internship\\\\learning\\\\MERN_Web - Copie\\\\frontend\\\\src\\\\components\\\\UserModifyModel.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useUserContext } from \"../hooks/useUserContext\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserModifyForm = ({\n  toggleModal1,\n  user\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userType, setUsertype] = useState('');\n  const [isClickedSubmit, setIsClickedSubmit] = useState(false);\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const {\n    dispatch\n  } = useUserContext();\n  const UpdateUser = async () => {\n    if (!user) {\n      setError('You must be logged in');\n      return;\n    }\n    if (email === \"\") {\n      setEmail(user.e);\n    }\n    const response = await fetch('/api/user/' + user._id, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n        //'Authorization': `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        userType\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      /*setError(json.error)\r\n      setEmptyFields(json.emptyFields)*/\n    }\n    if (response.ok) {\n      /*setEmail('');\r\n      setPassword('');\r\n      setUsertype('');*/\n      setError(null);\n      //setEmptyFields([])\n      console.log('user modified', json);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: json\n      });\n    }\n  };\n  const handleSubmitClick = () => {\n    setIsClickedSubmit(true);\n    UpdateUser();\n    //toggleModal1();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-show\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEmail(e.target.value),\n          value: email,\n          className: emptyFields.includes('email') ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          className: emptyFields.includes('password') ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"User type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setUsertype(e.target.value),\n          value: userType,\n          className: emptyFields.includes('usertype') ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"custom-button\",\n          type: \"submit\",\n          onClick: handleSubmitClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleModal1,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UserModifyForm, \"XO35OC6UvGO1XgL9ItrRcsbyPqI=\", false, function () {\n  return [useUserContext];\n});\n_c = UserModifyForm;\nexport default UserModifyForm;\nvar _c;\n$RefreshReg$(_c, \"UserModifyForm\");","map":{"version":3,"names":["useState","useUserContext","useAuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","UserModifyForm","toggleModal1","user","_s","email","setEmail","password","setPassword","userType","setUsertype","isClickedSubmit","setIsClickedSubmit","error","setError","emptyFields","setEmptyFields","dispatch","UpdateUser","e","response","fetch","_id","method","headers","body","JSON","stringify","json","ok","console","log","type","payload","handleSubmitClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","includes","onClick","_c","$RefreshReg$"],"sources":["C:/Users/azize/OneDrive/Bureau/internship/learning/MERN_Web - Copie/frontend/src/components/UserModifyModel.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useUserContext } from \"../hooks/useUserContext\";\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\n\r\n\r\nconst UserModifyForm = ({ toggleModal1 ,user}) =>{\r\n  const [email,setEmail] = useState('')\r\n  const [password,setPassword] = useState('')\r\n  const [userType,setUsertype] = useState('')\r\n  const [isClickedSubmit,setIsClickedSubmit] = useState(false)\r\n  const [error,setError] = useState(null)\r\n  const [emptyFields,setEmptyFields] = useState([])\r\n  const {dispatch} = useUserContext()\r\n\r\n\r\n\r\n  const UpdateUser = async() => {\r\n\r\n    if (!user) {\r\n      setError('You must be logged in')\r\n      return\r\n    }\r\n    if (email === \"\"){\r\n      setEmail(user.e)\r\n    }\r\n    const response = await fetch('/api/user/'+user._id, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        //'Authorization': `Bearer ${user.token}`\r\n      },\r\n      body: JSON.stringify({ email, password, userType }),\r\n    });\r\n    const json = await response.json()\r\n    if (!response.ok){\r\n      /*setError(json.error)\r\n      setEmptyFields(json.emptyFields)*/\r\n    }\r\n    if(response.ok){\r\n      \r\n      /*setEmail('');\r\n      setPassword('');\r\n      setUsertype('');*/\r\n      setError(null)\r\n      //setEmptyFields([])\r\n      console.log('user modified',json)    \r\n      dispatch({type: 'UPDATE_USER', payload:json})\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const handleSubmitClick = () => {\r\n    setIsClickedSubmit(true);\r\n    UpdateUser();\r\n    //toggleModal1();\r\n  };\r\n\r\n  return(\r\n    <>\r\n\r\n      <div className=\"modal-show\">\r\n        <div className=\"modal-content\">\r\n\r\n\r\n          <label>email</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={ (e) => setEmail(e.target.value)}\r\n            value={email}  \r\n            className={emptyFields.includes('email')? 'error' : ''}    \r\n          />\r\n\r\n          <label>password</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={ (e) => setPassword(e.target.value)}\r\n            value={password}  \r\n            className={emptyFields.includes('password')? 'error' : ''}    \r\n          />\r\n\r\n          <label>User type</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={ (e) => setUsertype(e.target.value)}\r\n            value={userType}\r\n            className={emptyFields.includes('usertype')? 'error' : ''}     \r\n          />\r\n\r\n          {error && <div className=\"error\">{error}</div>}   \r\n          <button \r\n          className=\"custom-button\"\r\n          type=\"submit\"\r\n          onClick={handleSubmitClick}>\r\n            Submit\r\n          </button>\r\n          \r\n\r\n\r\n          <button onClick={toggleModal1}>Close</button>\r\n        </div>\r\n      </div>\r\n\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserModifyForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}