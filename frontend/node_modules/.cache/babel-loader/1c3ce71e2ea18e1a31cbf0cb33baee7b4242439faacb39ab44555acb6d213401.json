{"ast":null,"code":"import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport { useAuthContext } from './hooks/useAuthContext';\nimport Home from './pages/Home';\nimport Navbar from './components/Navbar';\nimport Login from './pages/Login';\nimport SignUp from './pages/Signup';\n/*import Profile from './pages/Profile'\nimport Documentation from './pages/Documentation'\nimport Users from './pages/Users'\nimport Dashboard from './pages/Dashboard'\nimport Reports from './pages/Reports'\nimport UserPage from './pages/UserPage'\nimport UserModifyForm from './components/UserModifyModel'\n\nfunction App() {\n  const{user}=useAuthContext()//will have an object if we re loged in and null if we loged out\n  \n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Navbar/>\n      <div className='pages'>\n        <Routes>\n          <Route\n            path='/'\n            element={user ? <Home/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/login'\n            element={!user ? <Login/> : <Navigate to=\"/userpage\"/>}\n          />  \n          <Route \n            path='/signup'\n            element={!user ? <SignUp/> : <Navigate to=\"/userpage\"/>}\n          />   \n          <Route\n              path='/profile'\n              element={user ? <UserModifyForm/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/documentation'\n            element={user ? <Documentation/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/dashboard'\n            element={user ? <Dashboard/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/users'\n            element={user ? <Users/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/reports'\n            element={user ? <Reports/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/userpage'\n            element={user ? <UserPage/> : <Navigate to=\"/login\"/>}\n          />\n            \n          \n\n\n\n\n        </Routes>\n      \n      </div> \n      \n        \n      \n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n/*          <Route \n            path='/adminpage'\n            element={\n              user ? (user.userType === 'admin' ? <AdminPage /> : <Navigate to=\"/home\" />) :(<Navigate to=\"/\" />)}\n          \n                    <Route \n            path='/documentation'\n            element={\n              user ?  <Documentation /> : <Navigate to=\"/login\" />}\n          />        />\n          \n                     */","map":{"version":3,"names":["BrowserRouter","Routes","Route","Navigate","useAuthContext","Home","Navbar","Login","SignUp"],"sources":["C:/Users/azize/OneDrive/Bureau/internship/learning/MERN_Web - Copie/frontend/src/App.js"],"sourcesContent":["import {BrowserRouter, Routes, Route,Navigate} from 'react-router-dom'\nimport { useAuthContext } from './hooks/useAuthContext'\nimport Home from './pages/Home'\nimport Navbar from './components/Navbar' \nimport Login from './pages/Login'\nimport SignUp from './pages/Signup'\n/*import Profile from './pages/Profile'\nimport Documentation from './pages/Documentation'\nimport Users from './pages/Users'\nimport Dashboard from './pages/Dashboard'\nimport Reports from './pages/Reports'\nimport UserPage from './pages/UserPage'\nimport UserModifyForm from './components/UserModifyModel'\n\nfunction App() {\n  const{user}=useAuthContext()//will have an object if we re loged in and null if we loged out\n  \n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Navbar/>\n      <div className='pages'>\n        <Routes>\n          <Route\n            path='/'\n            element={user ? <Home/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/login'\n            element={!user ? <Login/> : <Navigate to=\"/userpage\"/>}\n          />  \n          <Route \n            path='/signup'\n            element={!user ? <SignUp/> : <Navigate to=\"/userpage\"/>}\n          />   \n          <Route\n              path='/profile'\n              element={user ? <UserModifyForm/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/documentation'\n            element={user ? <Documentation/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/dashboard'\n            element={user ? <Dashboard/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/users'\n            element={user ? <Users/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/reports'\n            element={user ? <Reports/> : <Navigate to=\"/login\"/>}\n          />\n          <Route \n            path='/userpage'\n            element={user ? <UserPage/> : <Navigate to=\"/login\"/>}\n          />\n            \n          \n\n\n\n\n        </Routes>\n      \n      </div> \n      \n        \n      \n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n/*          <Route \n            path='/adminpage'\n            element={\n              user ? (user.userType === 'admin' ? <AdminPage /> : <Navigate to=\"/home\" />) :(<Navigate to=\"/\" />)}\n          \n                    <Route \n            path='/documentation'\n            element={\n              user ?  <Documentation /> : <Navigate to=\"/login\" />}\n          />        />\n          \n                     */"],"mappings":"AAAA,SAAQA,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAACC,QAAQ,QAAO,kBAAkB;AACtE,SAASC,cAAc,QAAQ,wBAAwB;AACvD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}