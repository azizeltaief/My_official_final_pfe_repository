{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\azize\\\\OneDrive\\\\Bureau\\\\internship\\\\learning\\\\MERN_Web - Copie\\\\frontend\\\\src\\\\pages\\\\Documentation.js\",\n  _s = $RefreshSig$();\n/*import React, { useEffect } from 'react';\r\nimport githubEmbed from 'github-embed';\r\nimport 'babel-polyfill'; // Import the polyfill if not already included elsewhere in your project\r\n\r\nconst Documentation = () => {\r\n  useEffect(() => {\r\n    githubEmbed('.element', {\r\n      \"owner\": \"azizeltaief\", //\"your-github-username\"\r\n      \"repo\": \"PFE\",       //\"your-repository-name\"\r\n      \"ref\": \"main\",   //\"master\"\r\n      \"embed\": [\r\n        {\r\n          \"type\": \"htmlpage\",\r\n          \"label\": \"Embedded Wiki Page\",\r\n          \"url\": \"https://github.com/azizeltaief/PFE/wiki/Home\"   //\"https://github.com/your-github-username/your-repository-name/wiki/Your-Wiki-Page\"\r\n        }\r\n      ]\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"element\">\r\n      {/* This is where your embedded GitHub wiki page will be displayed */ /*}\r\n                                                                            </div>\r\n                                                                            );\r\n                                                                            };*/\n\n//export default Documentation;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WikiPage = ({\n  username,\n  repository,\n  page\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    const fetchWikiPage = async () => {\n      try {\n        const response = await fetch(`https://raw.githubusercontent.com/wiki/${username}/${repository}/${page}.md`);\n        if (response.ok) {\n          const text = await response.text();\n          setContent(text);\n        } else {\n          throw new Error('Failed to fetch wiki page');\n        }\n      } catch (error) {\n        console.error('Error fetching wiki page:', error);\n      }\n    };\n    fetchWikiPage();\n  }, [username, repository, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(WikiPage, \"wipnac41BTB3eHT+ORLT1pgXER0=\");\n_c = WikiPage;\nexport default WikiPage;\nvar _c;\n$RefreshReg$(_c, \"WikiPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WikiPage","username","repository","page","_s","content","setContent","fetchWikiPage","response","fetch","ok","text","Error","error","console","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/azize/OneDrive/Bureau/internship/learning/MERN_Web - Copie/frontend/src/pages/Documentation.js"],"sourcesContent":["/*import React, { useEffect } from 'react';\r\nimport githubEmbed from 'github-embed';\r\nimport 'babel-polyfill'; // Import the polyfill if not already included elsewhere in your project\r\n\r\nconst Documentation = () => {\r\n  useEffect(() => {\r\n    githubEmbed('.element', {\r\n      \"owner\": \"azizeltaief\", //\"your-github-username\"\r\n      \"repo\": \"PFE\",       //\"your-repository-name\"\r\n      \"ref\": \"main\",   //\"master\"\r\n      \"embed\": [\r\n        {\r\n          \"type\": \"htmlpage\",\r\n          \"label\": \"Embedded Wiki Page\",\r\n          \"url\": \"https://github.com/azizeltaief/PFE/wiki/Home\"   //\"https://github.com/your-github-username/your-repository-name/wiki/Your-Wiki-Page\"\r\n        }\r\n      ]\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"element\">\r\n      {/* This is where your embedded GitHub wiki page will be displayed *//*}\r\n    </div>\r\n  );\r\n};*/\r\n\r\n//export default Documentation;\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst WikiPage = ({ username, repository, page }) => {\r\n  const [content, setContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchWikiPage = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://raw.githubusercontent.com/wiki/${username}/${repository}/${page}.md`\r\n        );\r\n        if (response.ok) {\r\n          const text = await response.text();\r\n          setContent(text);\r\n        } else {\r\n          throw new Error('Failed to fetch wiki page');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching wiki page:', error);\r\n      }\r\n    };\r\n\r\n    fetchWikiPage();\r\n  }, [username, repository, page]);\r\n\r\n  return (\r\n    <div>\r\n      {/* Render the fetched wiki page content */}\r\n      <div dangerouslySetInnerHTML={{ __html: content }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WikiPage;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAtBA,CAsB2E;AAC3E;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,0CAAyCR,QAAS,IAAGC,UAAW,IAAGC,IAAK,KAC3E,CAAC;QACD,IAAIK,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCL,UAAU,CAACK,IAAI,CAAC;QAClB,CAAC,MAAM;UACL,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDN,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACN,QAAQ,EAAEC,UAAU,EAAEC,IAAI,CAAC,CAAC;EAEhC,oBACEJ,OAAA;IAAAgB,QAAA,eAEEhB,OAAA;MAAKiB,uBAAuB,EAAE;QAAEC,MAAM,EAAEZ;MAAQ;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7BIJ,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}