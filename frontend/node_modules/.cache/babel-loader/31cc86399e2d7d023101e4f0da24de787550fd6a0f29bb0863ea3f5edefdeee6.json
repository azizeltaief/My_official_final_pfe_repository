{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\azize\\\\OneDrive\\\\Bureau\\\\internship\\\\learning\\\\MERN_Web - Copie\\\\frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport image1 from './images/image1.png';\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { useUserContext } from \"../hooks/useUserContext\";\nimport './css/Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  /*Upload logic*/\n  const fileInputRef = useRef(null);\n  const handleUploadClick = () => {\n    fileInputRef.current.click(); // Programmatically trigger file input click\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    // Handle the file upload logic here, such as displaying the uploaded image\n    console.log('Uploaded file:', file);\n  };\n  /*Upload logic*/\n  const {\n    user\n  } = useAuthContext();\n  const {\n    users\n  } = useUserContext();\n  const [email, setEmail] = useState(user.email);\n  const [password, setPassword] = useState('');\n  const [userType, setUsertype] = useState(user.userType);\n  const [isClickedSubmit, setIsClickedSubmit] = useState(false);\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const {\n    dispatch\n  } = useUserContext();\n  const specificUser = users.find(user => user._id === user_id);\n  return specificUser ? /*#__PURE__*/_jsxDEV(UserDetails, {\n    user: specificUser\n  }, specificUser._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this) : null;\n  //useEffect(()=>{\n  const UpdateUser = async () => {\n    if (!user) {\n      setError('You must be logged in');\n      return;\n    }\n    //console.log(User)\n    console.log(user);\n    console.log(email + \"*EMAIL*\" + user.email);\n    console.log(password + \"*p*\" + user.password);\n    console.log(userType + \"*t*\" + user.userType);\n    if (email === user.email && password === \"\" && userType === user.userType) {\n      console.log(\"No changes\");\n      setMessage(\"No changes to update\");\n      return;\n    }\n    // Set email(the input) to user.email(the actual email before trying the modify process) if the input empty (we are not trying to modify a value)\n    const updatedEmail = email === user.email ? user.email : email;\n    const updatedPassword = password === '' ? user.password : password;\n    console.log(updatedEmail);\n    console.log(updatedPassword);\n    const response = await fetch('/api/user/' + user._id, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n        //'Authorization': `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        email: updatedEmail,\n        password: updatedPassword,\n        userType\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      /*setError(json.error)\r\n      setEmptyFields(json.emptyFields)*/\n      setError(json.error);\n    }\n    if (response.ok) {\n      /*setEmail('');\r\n      setPassword('');\r\n      setUsertype('');*/\n      setError(null);\n      //setEmptyFields([])\n      console.log('user modified', json);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: json\n      });\n    }\n  };\n\n  //},[  dispatch ])\n\n  const handleSubmitClick = () => {\n    setIsClickedSubmit(true);\n    UpdateUser();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image1,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        },\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"upload-button\",\n        onClick: handleUploadClick,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: e => setEmail(e.target.value),\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value),\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"userType\",\n        onChange: e => setUsertype(e.target.value),\n        value: userType,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-button\",\n        type: \"submit\",\n        onClick: handleSubmitClick,\n        children: \"Save Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"5IDd5shCWjNGcvEDdfDVqd9XKkw=\", false, function () {\n  return [useAuthContext, useUserContext, useUserContext];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useRef","useState","image1","useAuthContext","useUserContext","jsxDEV","_jsxDEV","Profile","_s","fileInputRef","handleUploadClick","current","click","handleFileChange","event","file","target","files","console","log","user","users","email","setEmail","password","setPassword","userType","setUsertype","isClickedSubmit","setIsClickedSubmit","error","setError","message","setMessage","emptyFields","setEmptyFields","dispatch","specificUser","find","_id","user_id","UserDetails","fileName","_jsxFileName","lineNumber","columnNumber","UpdateUser","updatedEmail","updatedPassword","response","fetch","method","headers","body","JSON","stringify","json","ok","type","payload","handleSubmitClick","className","children","src","alt","accept","ref","style","display","onChange","onClick","placeholder","e","value","id","_c","$RefreshReg$"],"sources":["C:/Users/azize/OneDrive/Bureau/internship/learning/MERN_Web - Copie/frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport image1 from './images/image1.png'\r\nimport { useAuthContext } from \"../hooks/useAuthContext\"\r\nimport { useUserContext } from \"../hooks/useUserContext\";\r\nimport './css/Profile.css'\r\n\r\nconst Profile = () => {\r\n\r\n  /*Upload logic*/\r\n  const fileInputRef = useRef(null);\r\n  const handleUploadClick = () => {\r\n    fileInputRef.current.click(); // Programmatically trigger file input click\r\n  };\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    // Handle the file upload logic here, such as displaying the uploaded image\r\n    console.log('Uploaded file:', file);\r\n  };\r\n  /*Upload logic*/\r\n  const {user} = useAuthContext()\r\n  const {users} = useUserContext();\r\n  const [email,setEmail] = useState(user.email)\r\n  const [password,setPassword] = useState('')\r\n  const [userType,setUsertype] = useState(user.userType)\r\n  const [isClickedSubmit,setIsClickedSubmit] = useState(false)\r\n  const [error,setError] = useState(null)\r\n  const [message,setMessage] = useState(null)\r\n  const [emptyFields,setEmptyFields] = useState([])\r\n  const {dispatch} = useUserContext()\r\n  \r\n  const specificUser = users.find(user => user._id === user_id);\r\n\r\nreturn specificUser ? <UserDetails user={specificUser} key={specificUser._id} /> : null;\r\n  //useEffect(()=>{\r\n    const UpdateUser = async() => {\r\n\r\n\r\n\r\n      if (!user) {\r\n        setError('You must be logged in')\r\n        return\r\n      }\r\n      //console.log(User)\r\n      console.log(user)\r\n      console.log(email+\"*EMAIL*\"+user.email)\r\n      console.log(password+\"*p*\"+user.password)\r\n      console.log(userType+\"*t*\"+user.userType)\r\n  \r\n      if (email === user.email  && password ===\"\"  && userType === user.userType){\r\n        console.log(\"No changes\")\r\n        setMessage(\"No changes to update\")\r\n        \r\n        return\r\n      }\r\n      // Set email(the input) to user.email(the actual email before trying the modify process) if the input empty (we are not trying to modify a value)\r\n      const updatedEmail = email === user.email ? user.email : email;\r\n      const updatedPassword = password === '' ? user.password : password;\r\n  \r\n      console.log(updatedEmail)\r\n      console.log(updatedPassword)\r\n  \r\n  \r\n      const response = await fetch('/api/user/'+user._id, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          //'Authorization': `Bearer ${user.token}`\r\n        },\r\n        body: JSON.stringify({ email:updatedEmail, password:updatedPassword, userType }),\r\n      });\r\n      const json = await response.json()\r\n      if (!response.ok){\r\n        /*setError(json.error)\r\n        setEmptyFields(json.emptyFields)*/\r\n        setError(json.error)\r\n      }\r\n      if(response.ok){\r\n        \r\n        /*setEmail('');\r\n        setPassword('');\r\n        setUsertype('');*/\r\n        setError(null)\r\n        //setEmptyFields([])\r\n        console.log('user modified',json)    \r\n        dispatch({type: 'UPDATE_USER', payload:json})\r\n      }\r\n    }\r\n      \r\n  //},[  dispatch ])\r\n\r\n\r\n\r\n  const handleSubmitClick = () => {\r\n    setIsClickedSubmit(true);\r\n    UpdateUser();\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-card\">\r\n        <div className=\"profile-image\">\r\n          <img src={image1} alt=\"Profile\" />\r\n        </div>\r\n\r\n        {/* Hidden file input */  }\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          ref={fileInputRef}\r\n          style={{ display: 'none' }}\r\n          onChange={handleFileChange}\r\n        />\r\n        {/* Upload button with label */ }\r\n        <label className=\"upload-button\" onClick={handleUploadClick}>\r\n          Upload Image\r\n        </label>\r\n\r\n        <div className=\"input-group\">\r\n          <input type=\"text\" placeholder=\"First Name\" />\r\n          <input type=\"text\" placeholder=\"Last Name\" />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <input type=\"email\" placeholder=\"Email\" onChange={ (e) => setEmail(e.target.value)} value={email} />\r\n          <input type=\"text\" placeholder=\"Password\" onChange={ (e) => setPassword(e.target.value)} value={password} />\r\n        </div>\r\n\r\n        <select \r\n          id=\"userType\"\r\n          onChange={ (e) => setUsertype(e.target.value) }\r\n          value={userType}  >\r\n            <option value=\"user\">user</option>\r\n            <option value=\"admin\">admin</option>\r\n          </select>\r\n\r\n\r\n\r\n        {error && <div className=\"error\">{error}</div>}   \r\n        {message && <div className=\"message\">{message}</div>} \r\n\r\n\r\n        <button className=\"save-button\" type=\"submit\" onClick={handleSubmitClick} >Save Profile</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}