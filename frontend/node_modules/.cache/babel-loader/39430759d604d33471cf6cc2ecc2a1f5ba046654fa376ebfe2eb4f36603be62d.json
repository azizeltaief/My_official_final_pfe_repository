{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\azize\\\\OneDrive\\\\Bureau\\\\internship\\\\learning\\\\MERN_Web - Copie\\\\frontend\\\\src\\\\components\\\\UserAddForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useScriptContext } from \"../hooks/useScriptContext\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScriptForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [usertype, setUsertype] = useState('');\n  const [isClickedSubmit, setIsClickedSubmit] = useState(false);\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const {\n    dispatch\n  } = useScriptContext();\n  const {\n    user\n  } = useAuthContext();\n  const SaveUser = async () => {\n    if (!user) {\n      setError('You must be logged in');\n      return;\n    }\n    const response = await fetch('/api/user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n        //'Authorization': `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        usertype\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setEmail('');\n      setPassword('');\n      setUsertype('');\n      setError(null);\n      setEmptyFields([]);\n      console.log('new script added', json);\n      dispatch({\n        type: 'CREATE_USER',\n        payload: json\n      });\n    }\n  };\n  const handleSubmitClick = () => {\n    setIsClickedSubmit(true);\n    SaveUser();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-show\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"User type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setUsername(e.target.value),\n          value: usertype,\n          className: emptyFields.includes('usertype') ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEmail(e.target.value),\n          value: email,\n          className: emptyFields.includes('email') ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          className: emptyFields.includes('password') ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"custom-button\",\n          type: \"submit\",\n          onClick: handleSubmitClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleModal,\n          children: \"Close Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ScriptForm, \"cWoG0pd9S2aoZj14+kwriQeeT4c=\", false, function () {\n  return [useScriptContext, useAuthContext];\n});\n_c = ScriptForm;\nexport default UserAddForm;\nvar _c;\n$RefreshReg$(_c, \"ScriptForm\");","map":{"version":3,"names":["useState","useScriptContext","useAuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ScriptForm","_s","email","setEmail","password","setPassword","usertype","setUsertype","isClickedSubmit","setIsClickedSubmit","error","setError","emptyFields","setEmptyFields","dispatch","user","SaveUser","response","fetch","method","headers","body","JSON","stringify","json","ok","console","log","type","payload","handleSubmitClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","setUsername","target","value","includes","onClick","toggleModal","_c","UserAddForm","$RefreshReg$"],"sources":["C:/Users/azize/OneDrive/Bureau/internship/learning/MERN_Web - Copie/frontend/src/components/UserAddForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useScriptContext } from \"../hooks/useScriptContext\";\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\n\r\n\r\nconst ScriptForm = () =>{\r\n  const [email,setEmail] = useState('')\r\n  const [password,setPassword] = useState('')\r\n  const [usertype,setUsertype] = useState('')\r\n  const [isClickedSubmit,setIsClickedSubmit] = useState(false)\r\n  const [error,setError] = useState(null)\r\n  const [emptyFields,setEmptyFields] = useState([])\r\n  const {dispatch} = useScriptContext()\r\n  const {user} = useAuthContext()\r\n\r\n\r\n\r\n  const SaveUser = async() => {\r\n\r\n    if (!user) {\r\n      setError('You must be logged in')\r\n      return\r\n    }\r\n    const response = await fetch('/api/user', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        //'Authorization': `Bearer ${user.token}`\r\n      },\r\n      body: JSON.stringify({ email, password, usertype }),\r\n    });\r\n    const json = await response.json()\r\n    if (!response.ok){\r\n      setError(json.error)\r\n      setEmptyFields(json.emptyFields)\r\n    }\r\n    if(response.ok){\r\n      \r\n      setEmail('');\r\n      setPassword('');\r\n      setUsertype('');\r\n      setError(null)\r\n      setEmptyFields([])\r\n      console.log('new script added',json)    \r\n      dispatch({type: 'CREATE_USER', payload:json})\r\n    }\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleSubmitClick = () => {\r\n    setIsClickedSubmit(true);\r\n    SaveUser();\r\n  };\r\n\r\n  return(\r\n    <>\r\n\r\n      <div className=\"modal-show\">\r\n        <div className=\"modal-content\">\r\n          <label>User type</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={ (e) => setUsername(e.target.value)}\r\n            value={usertype}\r\n            className={emptyFields.includes('usertype')? 'error' : ''}     \r\n          />\r\n\r\n          <label>email</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={ (e) => setEmail(e.target.value)}\r\n            value={email}  \r\n            className={emptyFields.includes('email')? 'error' : ''}    \r\n          />\r\n\r\n          <label>password</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={ (e) => setPassword(e.target.value)}\r\n            value={password}  \r\n            className={emptyFields.includes('password')? 'error' : ''}    \r\n          />\r\n\r\n          <button \r\n          className=\"custom-button\"\r\n          type=\"submit\"\r\n          onClick={handleSubmitClick}>\r\n            Submit\r\n          </button>\r\n          {error && <div className=\"error\">{error}</div>}\r\n\r\n\r\n          <button onClick={toggleModal}>Close Modal</button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n\r\n\r\n\r\n\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserAddForm"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,cAAc,QAAQ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGxD,MAAMC,UAAU,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACW,QAAQ,EAACC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACa,QAAQ,EAACC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACe,eAAe,EAACC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC5D,MAAM,CAACiB,KAAK,EAACC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACmB,WAAW,EAACC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM;IAACqB;EAAQ,CAAC,GAAGpB,gBAAgB,CAAC,CAAC;EACrC,MAAM;IAACqB;EAAI,CAAC,GAAGpB,cAAc,CAAC,CAAC;EAI/B,MAAMqB,QAAQ,GAAG,MAAAA,CAAA,KAAW;IAE1B,IAAI,CAACD,IAAI,EAAE;MACTJ,QAAQ,CAAC,uBAAuB,CAAC;MACjC;IACF;IACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;QAChB;MACF,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAErB,KAAK;QAAEE,QAAQ;QAAEE;MAAS,CAAC;IACpD,CAAC,CAAC;IACF,MAAMkB,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACfd,QAAQ,CAACa,IAAI,CAACd,KAAK,CAAC;MACpBG,cAAc,CAACW,IAAI,CAACZ,WAAW,CAAC;IAClC;IACA,IAAGK,QAAQ,CAACQ,EAAE,EAAC;MAEbtB,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;MACfI,QAAQ,CAAC,IAAI,CAAC;MACdE,cAAc,CAAC,EAAE,CAAC;MAClBa,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAACH,IAAI,CAAC;MACpCV,QAAQ,CAAC;QAACc,IAAI,EAAE,aAAa;QAAEC,OAAO,EAACL;MAAI,CAAC,CAAC;IAC/C;EAEF,CAAC;EAKD,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9BrB,kBAAkB,CAAC,IAAI,CAAC;IACxBO,QAAQ,CAAC,CAAC;EACZ,CAAC;EAED,oBACEnB,OAAA,CAAAE,SAAA;IAAAgC,QAAA,eAEElC,OAAA;MAAKmC,SAAS,EAAC,YAAY;MAAAD,QAAA,eACzBlC,OAAA;QAAKmC,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC5BlC,OAAA;UAAAkC,QAAA,EAAO;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBvC,OAAA;UACE+B,IAAI,EAAC,MAAM;UACXS,QAAQ,EAAIC,CAAC,IAAKC,WAAW,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAC9CA,KAAK,EAAEnC,QAAS;UAChB0B,SAAS,EAAEpB,WAAW,CAAC8B,QAAQ,CAAC,UAAU,CAAC,GAAE,OAAO,GAAG;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,eAEFvC,OAAA;UAAAkC,QAAA,EAAO;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBvC,OAAA;UACE+B,IAAI,EAAC,MAAM;UACXS,QAAQ,EAAIC,CAAC,IAAKnC,QAAQ,CAACmC,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAC3CA,KAAK,EAAEvC,KAAM;UACb8B,SAAS,EAAEpB,WAAW,CAAC8B,QAAQ,CAAC,OAAO,CAAC,GAAE,OAAO,GAAG;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,eAEFvC,OAAA;UAAAkC,QAAA,EAAO;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBvC,OAAA;UACE+B,IAAI,EAAC,MAAM;UACXS,QAAQ,EAAIC,CAAC,IAAKjC,WAAW,CAACiC,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAC9CA,KAAK,EAAErC,QAAS;UAChB4B,SAAS,EAAEpB,WAAW,CAAC8B,QAAQ,CAAC,UAAU,CAAC,GAAE,OAAO,GAAG;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,eAEFvC,OAAA;UACAmC,SAAS,EAAC,eAAe;UACzBJ,IAAI,EAAC,QAAQ;UACbe,OAAO,EAAEb,iBAAkB;UAAAC,QAAA,EAAC;QAE5B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACR1B,KAAK,iBAAIb,OAAA;UAAKmC,SAAS,EAAC,OAAO;UAAAD,QAAA,EAAErB;QAAK;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAG9CvC,OAAA;UAAQ8C,OAAO,EAAEC,WAAY;UAAAb,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBAaN,CAAC;AAEP,CAAC;AAAAnC,EAAA,CA3GKD,UAAU;EAAA,QAOKN,gBAAgB,EACpBC,cAAc;AAAA;AAAAkD,EAAA,GARzB7C,UAAU;AA6GhB,eAAe8C,WAAW;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}