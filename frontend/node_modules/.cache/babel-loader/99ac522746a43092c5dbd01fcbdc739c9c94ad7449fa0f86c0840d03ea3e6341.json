{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\azize\\\\OneDrive\\\\Bureau\\\\internship\\\\learning\\\\MERN_Web - Copie\\\\frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './css/Profile.css'; // Import CSS file for styling\nimport user_image1 from './images/user_image1.jpg';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useEffect, useState } from 'react';\nimport { useUserContext } from '../hooks/useUserContext';\nimport ProfileComponent from '../components/ProfileComponent';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  /*const [scripts, setScripts] = useState(null) we no longer need it we'll use context*/\n  const {\n    users,\n    dispatch\n  } = useUserContext();\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    const updateUser = async () => {\n      if (user && updatedUser) {\n        // Check if there's a logged-in user and an updated user\n        const response = await fetch(`/api/user/${updatedUser._id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n            // 'Authorization': `Bearer ${user.token}`, // Uncomment and include if you have authentication headers\n          },\n          body: JSON.stringify(updatedUser) // Assuming updatedUser contains the updated user data\n        });\n        const json = await response.json();\n        if (response.ok) {\n          // If the update request is successful\n          dispatch({\n            type: 'UPDATE_USER',\n            payload: json\n          }); // Update the user context state with the updated user\n          console.log('User updated successfully');\n        } else {\n          console.error('Failed to update user:', json.message); // Log any error messages\n        }\n      }\n    };\n    updateUser(); // Call the updateUser function when the component mounts or when user or updatedUser changes\n  }, [dispatch, user, updatedUser]); // Add user and updatedUser to the dependency array\n\n  useEffect(() => {\n    const updateUser = async () => {\n      const response = await fetch('/api/user' /*, {\r\n                                               headers: {'Authorization': `Bearer ${user.token}`},\r\n                                               }*/);\n      const json = await response.json(); //json type's is array of objects each object is a script we use .json() to transform a JSON-formatted array of JavaScript objects to array of Javascript objects      \n      if (response.ok) {\n        //if we get the data back successfully\n        /*setScripts(json)   //update the state variable script with the fetched data (json). Updating the state triggers a re-render of the component, allowing you to display or work with the fetched data in your React component.\r\n        console.log(\"ok\")*/\n        dispatch({\n          type: 'UPDATE_USER',\n          payload: json\n        });\n      }\n    };\n    if (user) {\n      //if we have a user we will fetch the scripts if not we will not fetch it\n      updateUser();\n    }\n  }, [dispatch, user]); //we want it to be rendered only the first time \n\n  /*const CreateUser = async() => {\r\n      if (!user) {\r\n      setError('You must be logged in')\r\n      return\r\n    }\r\n    const response = await fetch('/api/user', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        //'Authorization': `Bearer ${user.token}`\r\n      },\r\n      body: JSON.stringify({ title, load, reps }),\r\n    });\r\n    const json = await response.json()\r\n    if (!response.ok){\r\n      setError(json.error)\r\n      setEmptyFields(json.emptyFields)\r\n    }\r\n    if(response.ok){\r\n      \r\n      setTitle('');\r\n      setLoad('');\r\n      setReps('');\r\n      setError(null)\r\n      setEmptyFields([])\r\n      console.log('new script added',json)    \r\n      dispatch({type: 'CREATE_SCRIPT', payload:json})\r\n    }\r\n    \r\n  }*/\n\n  /*const handleAddClick = () => {\r\n    //setIsClickedSubmit(true);\r\n    //CreateUser();\r\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-management-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list\",\n        children: users === null ?\n        /*#__PURE__*/\n        // Render loading indicator while users are being fetched\n        _jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this) : users.map(user => /*#__PURE__*/_jsxDEV(UserDetails, {\n          user: user\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-add\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-user-button\",\n        onClick: toggleModal,\n        children: \"Add new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), showModal ? /*#__PURE__*/_jsxDEV(UserAddForm, {\n        toggleModal: toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-hide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-show\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Modal Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This is the content of the modal.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Profile, \"wT96FiXyu3PUFTrmezLVW5XaIGk=\", false, function () {\n  return [useUserContext, useAuthContext];\n});\n_c = Profile;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","user_image1","useAuthContext","useEffect","useState","useUserContext","ProfileComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","users","dispatch","user","updateUser","updatedUser","response","fetch","_id","method","headers","body","JSON","stringify","json","ok","type","payload","console","log","error","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","UserDetails","onClick","toggleModal","showModal","UserAddForm","_c","Users","$RefreshReg$"],"sources":["C:/Users/azize/OneDrive/Bureau/internship/learning/MERN_Web - Copie/frontend/src/pages/Profile.js"],"sourcesContent":["import React from 'react';\r\nimport './css/Profile.css'; // Import CSS file for styling\r\nimport user_image1 from './images/user_image1.jpg'\r\nimport { useAuthContext } from '../hooks/useAuthContext';\r\nimport { useEffect,useState } from 'react';\r\nimport { useUserContext } from '../hooks/useUserContext';\r\nimport ProfileComponent from '../components/ProfileComponent';\r\n\r\nconst Profile = () => {\r\n    /*const [scripts, setScripts] = useState(null) we no longer need it we'll use context*/\r\n    const {users,dispatch} = useUserContext();\r\n    const {user} = useAuthContext()\r\n\r\n    useEffect(() => {\r\n      const updateUser = async () => {\r\n        if (user && updatedUser) { // Check if there's a logged-in user and an updated user\r\n          const response = await fetch(`/api/user/${updatedUser._id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              // 'Authorization': `Bearer ${user.token}`, // Uncomment and include if you have authentication headers\r\n            },\r\n            body: JSON.stringify(updatedUser), // Assuming updatedUser contains the updated user data\r\n          });\r\n    \r\n          const json = await response.json();\r\n    \r\n          if (response.ok) { // If the update request is successful\r\n            dispatch({ type: 'UPDATE_USER', payload: json }); // Update the user context state with the updated user\r\n            console.log('User updated successfully');\r\n          } else {\r\n            console.error('Failed to update user:', json.message); // Log any error messages\r\n          }\r\n        }\r\n      };\r\n    \r\n      updateUser(); // Call the updateUser function when the component mounts or when user or updatedUser changes\r\n    }, [dispatch, user, updatedUser]); // Add user and updatedUser to the dependency array\r\n\r\n    useEffect( ()=>\r\n    {\r\n      const updateUser = async ()=>{\r\n        const response = await fetch('/api/user'/*, {\r\n          headers: {'Authorization': `Bearer ${user.token}`},\r\n        }*/)\r\n        const json = await response.json()  //json type's is array of objects each object is a script we use .json() to transform a JSON-formatted array of JavaScript objects to array of Javascript objects      \r\n        if(response.ok){ //if we get the data back successfully\r\n          /*setScripts(json)   //update the state variable script with the fetched data (json). Updating the state triggers a re-render of the component, allowing you to display or work with the fetched data in your React component.\r\n          console.log(\"ok\")*/\r\n          dispatch({type:'UPDATE_USER', payload:json})\r\n\r\n        }\r\n            \r\n      }\r\n      if (user) { //if we have a user we will fetch the scripts if not we will not fetch it\r\n        updateUser()\r\n\r\n  \r\n      }\r\n    },[  dispatch, user]) //we want it to be rendered only the first time \r\n    \r\n    /*const CreateUser = async() => {\r\n\r\n      if (!user) {\r\n        setError('You must be logged in')\r\n        return\r\n      }\r\n      const response = await fetch('/api/user', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          //'Authorization': `Bearer ${user.token}`\r\n        },\r\n        body: JSON.stringify({ title, load, reps }),\r\n      });\r\n      const json = await response.json()\r\n      if (!response.ok){\r\n        setError(json.error)\r\n        setEmptyFields(json.emptyFields)\r\n      }\r\n      if(response.ok){\r\n        \r\n        setTitle('');\r\n        setLoad('');\r\n        setReps('');\r\n        setError(null)\r\n        setEmptyFields([])\r\n        console.log('new script added',json)    \r\n        dispatch({type: 'CREATE_SCRIPT', payload:json})\r\n      }\r\n      \r\n    }*/\r\n\r\n    /*const handleAddClick = () => {\r\n      //setIsClickedSubmit(true);\r\n      //CreateUser();\r\n    };*/\r\n\r\n\r\n\r\n  return (\r\n  <>\r\n    <div className=\"user-management-container\">\r\n      <div className=\"header\">\r\n        <div className=\"column\">Full Name</div>\r\n        <div className=\"column\">Username</div>\r\n        <div className=\"column\">Status</div>\r\n        <div className=\"column\">Role</div>\r\n        <div className=\"actions\">Actions</div>\r\n      </div>\r\n      <div className=\"user-list\">\r\n      {users === null ? ( // Render loading indicator while users are being fetched\r\n        <p></p>\r\n      ) : (users.map((user) => (\r\n          <UserDetails user={user} key={user._id}/>)))\r\n      }\r\n      </div>\r\n\r\n    </div>\r\n    <div className=\"container-add\">\r\n      <button className=\"add-user-button\"\r\n      onClick={toggleModal}>Add new user</button>\r\n      {showModal ? (\r\n        <UserAddForm toggleModal={toggleModal}/>\r\n\r\n      ) : (\r\n        <div className=\"modal-hide\">\r\n          <div className=\"modal-show\">\r\n            <div className=\"modal-content\">\r\n              <h2>Modal Content</h2>\r\n              <p>This is the content of the modal.</p>\r\n              <button onClick={toggleModal}>Close</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      )}\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n  </>\r\n  );\r\n\r\n};\r\nexport default Users;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}