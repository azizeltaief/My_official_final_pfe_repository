{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\azize\\\\OneDrive\\\\Bureau\\\\internship\\\\learning\\\\MERN_Web - Copie\\\\frontend\\\\src\\\\components\\\\UserModifyModel.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useUserContext } from \"../hooks/useUserContext\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserModifyForm = ({\n  toggleModal1,\n  user\n}) => {\n  _s();\n  const [email, setEmail] = useState(user.email);\n  const [password, setPassword] = useState('');\n  const [userType, setUsertype] = useState(user.userType);\n  const [isClickedSubmit, setIsClickedSubmit] = useState(false);\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const {\n    dispatch\n  } = useUserContext();\n  const UpdateUser = async () => {\n    if (!user) {\n      setError('You must be logged in');\n      return;\n    }\n    // Set email(the input) to user.email(the actual email before trying the modify process) if the input empty (we are not trying to modify a value)\n    const updatedEmail = email === user ? user.email : email;\n    const updatedPassword = password === '' ? user.password : password;\n    console.log(updatedEmail);\n    const response = await fetch('/api/user/' + user._id, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n        //'Authorization': `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        email: updatedEmail,\n        password: updatedPassword,\n        userType\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      /*setError(json.error)\r\n      setEmptyFields(json.emptyFields)*/\n      setError(json.error);\n    }\n    if (response.ok) {\n      /*setEmail('');\r\n      setPassword('');\r\n      setUsertype('');*/\n      setError(null);\n      //setEmptyFields([])\n      console.log('user modified', json);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: json\n      });\n      toggleModal1();\n    }\n  };\n  const handleSubmitClick = () => {\n    setIsClickedSubmit(true);\n    UpdateUser();\n    console.log(userType);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-show\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEmail(e.target.value),\n          onFocus: e => {\n            if (email === user.email) setEmail('fcsq');\n          } // Clear default text when focused, assuming default text is user's email            value={email}     \n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setPassword(e.target.value),\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"User type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"userType\",\n          onChange: e => setUsertype(e.target.value),\n          value: userType,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"user\",\n            children: \"user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"custom-button\",\n          type: \"submit\",\n          onClick: handleSubmitClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleModal1,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UserModifyForm, \"sfVOs2Y3gXN8xAxBlb26Itk9ofA=\", false, function () {\n  return [useUserContext];\n});\n_c = UserModifyForm;\nexport default UserModifyForm;\n\n/*          <label>User type</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={ (e) => setUsertype(e.target.value)}\r\n            value={userType}\r\n            className={emptyFields.includes('usertype')? 'error' : ''}     \r\n          />*/\nvar _c;\n$RefreshReg$(_c, \"UserModifyForm\");","map":{"version":3,"names":["useState","useUserContext","useAuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","UserModifyForm","toggleModal1","user","_s","email","setEmail","password","setPassword","userType","setUsertype","isClickedSubmit","setIsClickedSubmit","error","setError","emptyFields","setEmptyFields","dispatch","UpdateUser","updatedEmail","updatedPassword","console","log","response","fetch","_id","method","headers","body","JSON","stringify","json","ok","type","payload","handleSubmitClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","onFocus","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/azize/OneDrive/Bureau/internship/learning/MERN_Web - Copie/frontend/src/components/UserModifyModel.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useUserContext } from \"../hooks/useUserContext\";\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\n\r\n\r\nconst UserModifyForm = ({ toggleModal1 ,user}) =>{\r\n  const [email,setEmail] = useState(user.email)\r\n  const [password,setPassword] = useState('')\r\n  const [userType,setUsertype] = useState(user.userType)\r\n  const [isClickedSubmit,setIsClickedSubmit] = useState(false)\r\n  const [error,setError] = useState(null)\r\n  const [emptyFields,setEmptyFields] = useState([])\r\n  const {dispatch} = useUserContext()\r\n\r\n\r\n\r\n  const UpdateUser = async() => {\r\n\r\n\r\n\r\n    if (!user) {\r\n      setError('You must be logged in')\r\n      return\r\n    }\r\n    // Set email(the input) to user.email(the actual email before trying the modify process) if the input empty (we are not trying to modify a value)\r\n    const updatedEmail = email === user ? user.email : email;\r\n    const updatedPassword = password === '' ? user.password : password;\r\n\r\n    console.log(updatedEmail)\r\n    const response = await fetch('/api/user/'+user._id, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        //'Authorization': `Bearer ${user.token}`\r\n      },\r\n      body: JSON.stringify({ email:updatedEmail, password:updatedPassword, userType }),\r\n    });\r\n    const json = await response.json()\r\n    if (!response.ok){\r\n      /*setError(json.error)\r\n      setEmptyFields(json.emptyFields)*/\r\n      setError(json.error)\r\n    }\r\n    if(response.ok){\r\n      \r\n      /*setEmail('');\r\n      setPassword('');\r\n      setUsertype('');*/\r\n      setError(null)\r\n      //setEmptyFields([])\r\n      console.log('user modified',json)    \r\n      dispatch({type: 'UPDATE_USER', payload:json})\r\n      toggleModal1();\r\n    }\r\n  }\r\n\r\n\r\n  const handleSubmitClick = () => {\r\n    setIsClickedSubmit(true);\r\n    UpdateUser();\r\n    console.log(userType)\r\n\r\n  };\r\n\r\n\r\n  return(\r\n    <>\r\n\r\n      <div className=\"modal-show\">\r\n        <div className=\"modal-content\">      \r\n\r\n          <label>email</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={ (e) => setEmail(e.target.value)}\r\n            onFocus={(e) => { if (email === user.email) setEmail('fcsq'); }}  // Clear default text when focused, assuming default text is user's email            value={email}     \r\n          />\r\n\r\n          <label>password</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={ (e) => setPassword(e.target.value)}\r\n            value={password}  \r\n          />\r\n\r\n          <label>User type</label>\r\n          <select \r\n          id=\"userType\"\r\n          onChange={ (e) => setUsertype(e.target.value) }\r\n          value={userType}  >\r\n            <option value=\"user\">user</option>\r\n            <option value=\"admin\">admin</option>\r\n          </select>\r\n\r\n\r\n\r\n          {error && <div className=\"error\">{error}</div>}   \r\n\r\n\r\n\r\n\r\n\r\n          \r\n          \r\n          \r\n          <button \r\n          className=\"custom-button\"\r\n          type=\"submit\"\r\n          onClick={handleSubmitClick}>\r\n            Submit\r\n          </button>\r\n          \r\n\r\n\r\n          <button onClick={toggleModal1}>Close</button>\r\n        </div>\r\n      </div>\r\n\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserModifyForm\r\n\r\n/*          <label>User type</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={ (e) => setUsertype(e.target.value)}\r\n            value={userType}\r\n            className={emptyFields.includes('usertype')? 'error' : ''}     \r\n          />*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}