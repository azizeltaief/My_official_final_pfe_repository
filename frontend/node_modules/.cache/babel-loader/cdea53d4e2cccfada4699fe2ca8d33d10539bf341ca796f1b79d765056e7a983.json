{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\azize\\\\OneDrive\\\\Bureau\\\\internship\\\\learning\\\\MERN_Web - Copie\\\\frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './css/Profile.css'; // Import CSS file for styling\nimport user_image1 from './images/user_image1.jpg';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useEffect, useState } from 'react';\nimport { useUserContext } from '../hooks/useUserContext';\nimport ProfileComponent from '../components/ProfileComponent';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  /*const [scripts, setScripts] = useState(null) we no longer need it we'll use context*/\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const response = await fetch('/api/user' /*, {\r\n                                               headers: {'Authorization': `Bearer ${user.token}`},\r\n                                               }*/);\n      const json = await response.json(); //json type's is array of objects each object is a script we use .json() to transform a JSON-formatted array of JavaScript objects to array of Javascript objects      \n      if (response.ok) {\n        //if we get the data back successfully\n        /*setScripts(json)   //update the state variable script with the fetched data (json). Updating the state triggers a re-render of the component, allowing you to display or work with the fetched data in your React component.\r\n        console.log(\"ok\")*/\n        dispatch({\n          type: 'SET_USERS',\n          payload: json\n        });\n      }\n    };\n    if (user) {\n      //if we have a user we will fetch the scripts if not we will not fetch it\n      fetchUsers();\n    }\n  }, [dispatch, user, users, showModal]); //we want it to be rendered only the first time \n\n  /*const CreateUser = async() => {\r\n      if (!user) {\r\n      setError('You must be logged in')\r\n      return\r\n    }\r\n    const response = await fetch('/api/user', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        //'Authorization': `Bearer ${user.token}`\r\n      },\r\n      body: JSON.stringify({ title, load, reps }),\r\n    });\r\n    const json = await response.json()\r\n    if (!response.ok){\r\n      setError(json.error)\r\n      setEmptyFields(json.emptyFields)\r\n    }\r\n    if(response.ok){\r\n      \r\n      setTitle('');\r\n      setLoad('');\r\n      setReps('');\r\n      setError(null)\r\n      setEmptyFields([])\r\n      console.log('new script added',json)    \r\n      dispatch({type: 'CREATE_SCRIPT', payload:json})\r\n    }\r\n    \r\n  }*/\n\n  /*const handleAddClick = () => {\r\n    //setIsClickedSubmit(true);\r\n    //CreateUser();\r\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-management-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list\",\n        children: users === null ?\n        /*#__PURE__*/\n        // Render loading indicator while users are being fetched\n        _jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this) : users.map(user => /*#__PURE__*/_jsxDEV(UserDetails, {\n          user: user\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-add\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-user-button\",\n        onClick: toggleModal,\n        children: \"Add new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), showModal ? /*#__PURE__*/_jsxDEV(UserAddForm, {\n        toggleModal: toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-hide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-show\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Modal Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This is the content of the modal.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Profile, \"9siNWUWwJu2px5vF9D/wDlQuSWM=\", false, function () {\n  return [useAuthContext];\n});\n_c = Profile;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","user_image1","useAuthContext","useEffect","useState","useUserContext","ProfileComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","user","fetchUsers","response","fetch","json","ok","dispatch","type","payload","users","showModal","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","UserDetails","_id","onClick","toggleModal","UserAddForm","_c","Users","$RefreshReg$"],"sources":["C:/Users/azize/OneDrive/Bureau/internship/learning/MERN_Web - Copie/frontend/src/pages/Profile.js"],"sourcesContent":["import React from 'react';\r\nimport './css/Profile.css'; // Import CSS file for styling\r\nimport user_image1 from './images/user_image1.jpg'\r\nimport { useAuthContext } from '../hooks/useAuthContext';\r\nimport { useEffect,useState } from 'react';\r\nimport { useUserContext } from '../hooks/useUserContext';\r\nimport ProfileComponent from '../components/ProfileComponent';\r\n\r\nconst Profile = () => {\r\n    /*const [scripts, setScripts] = useState(null) we no longer need it we'll use context*/\r\n    const {user} = useAuthContext()\r\n\r\n\r\n\r\n    useEffect( ()=>\r\n    {\r\n      const fetchUsers = async ()=>{\r\n        const response = await fetch('/api/user'/*, {\r\n          headers: {'Authorization': `Bearer ${user.token}`},\r\n        }*/)\r\n        const json = await response.json()  //json type's is array of objects each object is a script we use .json() to transform a JSON-formatted array of JavaScript objects to array of Javascript objects      \r\n        if(response.ok){ //if we get the data back successfully\r\n          /*setScripts(json)   //update the state variable script with the fetched data (json). Updating the state triggers a re-render of the component, allowing you to display or work with the fetched data in your React component.\r\n          console.log(\"ok\")*/\r\n          dispatch({type:'SET_USERS', payload:json})\r\n\r\n        }\r\n            \r\n      }\r\n      if (user) { //if we have a user we will fetch the scripts if not we will not fetch it\r\n        fetchUsers()\r\n\r\n  \r\n      }\r\n    },[  dispatch, user, users,showModal]) //we want it to be rendered only the first time \r\n    \r\n    /*const CreateUser = async() => {\r\n\r\n      if (!user) {\r\n        setError('You must be logged in')\r\n        return\r\n      }\r\n      const response = await fetch('/api/user', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          //'Authorization': `Bearer ${user.token}`\r\n        },\r\n        body: JSON.stringify({ title, load, reps }),\r\n      });\r\n      const json = await response.json()\r\n      if (!response.ok){\r\n        setError(json.error)\r\n        setEmptyFields(json.emptyFields)\r\n      }\r\n      if(response.ok){\r\n        \r\n        setTitle('');\r\n        setLoad('');\r\n        setReps('');\r\n        setError(null)\r\n        setEmptyFields([])\r\n        console.log('new script added',json)    \r\n        dispatch({type: 'CREATE_SCRIPT', payload:json})\r\n      }\r\n      \r\n    }*/\r\n\r\n    /*const handleAddClick = () => {\r\n      //setIsClickedSubmit(true);\r\n      //CreateUser();\r\n    };*/\r\n\r\n\r\n\r\n  return (\r\n  <>\r\n    <div className=\"user-management-container\">\r\n      <div className=\"header\">\r\n        <div className=\"column\">Full Name</div>\r\n        <div className=\"column\">Username</div>\r\n        <div className=\"column\">Status</div>\r\n        <div className=\"column\">Role</div>\r\n        <div className=\"actions\">Actions</div>\r\n      </div>\r\n      <div className=\"user-list\">\r\n      {users === null ? ( // Render loading indicator while users are being fetched\r\n        <p></p>\r\n      ) : (users.map((user) => (\r\n          <UserDetails user={user} key={user._id}/>)))\r\n      }\r\n      </div>\r\n\r\n    </div>\r\n    <div className=\"container-add\">\r\n      <button className=\"add-user-button\"\r\n      onClick={toggleModal}>Add new user</button>\r\n      {showModal ? (\r\n        <UserAddForm toggleModal={toggleModal}/>\r\n\r\n      ) : (\r\n        <div className=\"modal-hide\">\r\n          <div className=\"modal-show\">\r\n            <div className=\"modal-content\">\r\n              <h2>Modal Content</h2>\r\n              <p>This is the content of the modal.</p>\r\n              <button onClick={toggleModal}>Close</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      )}\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n  </>\r\n  );\r\n\r\n};\r\nexport default Users;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}