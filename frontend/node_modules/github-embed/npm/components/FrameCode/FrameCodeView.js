'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _highlight = require('highlight.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FrameCodeView = function (_Component) {
    _inherits(FrameCodeView, _Component);

    function FrameCodeView() {
        _classCallCheck(this, FrameCodeView);

        return _possibleConstructorReturn(this, (FrameCodeView.__proto__ || Object.getPrototypeOf(FrameCodeView)).apply(this, arguments));
    }

    _createClass(FrameCodeView, [{
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            var _props = this.props,
                code = _props.code,
                shown = _props.shown;


            if (!this.highlighted && shown && code) {
                (0, _highlight.highlightBlock)(this.ref);
                this.highlighted = true;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                code = _props2.code,
                shown = _props2.shown,
                type = _props2.type;


            return _react2.default.createElement(
                'pre',
                {
                    ref: function ref(_ref) {
                        _this2.ref = _ref;
                    },
                    className: type,
                    style: {
                        display: shown ? '' : 'none'
                    }
                },
                code
            );
        }
    }]);

    return FrameCodeView;
}(_react.Component);

FrameCodeView.propTypes = {
    code: _react.PropTypes.string.isRequired,
    shown: _react.PropTypes.bool.isRequired,
    type: _react.PropTypes.string.isRequired
};

var _default = FrameCodeView;
exports.default = _default;
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(FrameCodeView, 'FrameCodeView', 'src/components/FrameCode/FrameCodeView.js');

    __REACT_HOT_LOADER__.register(_default, 'default', 'src/components/FrameCode/FrameCodeView.js');
}();

;